<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="/home/giacomo/Projects/CommandLine/build/out/CommandLine.Tests.dll" total="157" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2013-01-18" time="23:02:26">
  <environment nunit-version="2.5.10.11092" clr-version="4.0.30319.1" os-version="Unix 3.2.0.36" platform="Unix" cwd="/home/giacomo/src/kayak/packages/NUnit.2.5.10.11092/tools" machine-name="ubuntulap" user="giacomo" user-domain="ubuntulap" />
  <culture-info current-culture="it-IT" current-uiculture="it-IT" />
  <test-suite type="Assembly" name="/home/giacomo/Projects/CommandLine/build/out/CommandLine.Tests.dll" executed="True" result="Success" success="True" time="0.734" asserts="0">
    <results>
      <test-suite type="Namespace" name="CommandLine" executed="True" result="Success" success="True" time="0.728" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.609" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ArgumentParserFixture" executed="True" result="Success" success="True" time="0.028" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues" executed="True" result="Success" success="True" time="0.023" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="AttributesFixture" executed="True" result="Success" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.ShortNameWithLineTerminatorThrowsException_2" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.ShortNameWithWhiteSpaceThrowsException" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.ShortNameWithWhiteSpaceThrowsException_2" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CommandLineParserFixture" executed="True" result="Success" success="True" time="0.181" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue" executed="True" result="Success" success="True" time="0.021" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber" executed="True" result="Success" success="True" time="0.021" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseOptionList" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray" executed="True" result="Success" success="True" time="0.011" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseStringOption" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully" executed="True" result="Success" success="True" time="0.009" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CommandLineParserSettingsFixture" executed="True" result="Success" success="True" time="0.012" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="EnumeratorsFixture" executed="True" result="Success" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.EnumeratorsFixture.CharIteration" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.EnumeratorsFixture.StringIteration" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="HelpOptionAttributeFixture" executed="True" result="Success" success="True" time="0.026" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp" executed="True" result="Success" success="True" time="0.018" asserts="0" />
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MutuallyExclusiveParsingFixture" executed="True" result="Success" success="True" time="0.025" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="NullableTypesParsingFixture" executed="True" result="Success" success="True" time="0.045" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OptionArrayAttributeParsingFixture" executed="True" result="Success" success="True" time="0.094" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo" executed="True" result="Success" success="True" time="0.009" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="OptionMapFixture" executed="True" result="Success" success="True" time="0.010" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.OptionMapFixture.ManageOptions" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ReflectionUtilFixture" executed="True" result="Success" success="True" time="0.022" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SingletonFixture" executed="True" result="Success" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="StrictFixture" executed="True" result="Success" success="True" time="0.027" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits" executed="True" result="Success" success="True" time="0.015" asserts="0" />
                  <test-case name="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                  <test-case name="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="Namespace" name="Text" executed="True" result="Success" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="VerbsHelpTextFixture" executed="True" result="Success" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CommandLine.Tests.Text.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="CommandLine.Tests.Text.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                      <test-case name="CommandLine.Tests.Text.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                      <test-case name="CommandLine.Tests.Text.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Tests.Text.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="UnknownArgumentsFixture" executed="True" result="Success" success="True" time="0.002" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValueListAttributeFixture" executed="True" result="Success" success="True" time="0.007" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ValueListAttributeParsingFixture" executed="True" result="Success" success="True" time="0.009" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="VerbsFixture" executed="True" result="Success" success="True" time="0.017" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.VerbsFixture.FailedParsingPrintsHelpIndex" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithEmptyArguments" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithNullOrEmptyVerb" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Text" executed="True" result="Success" success="True" time="0.101" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.100" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CopyrightInfoFixture" executed="True" result="Success" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="HeadingInfoFixture" executed="True" result="Success" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="HelpTextFixture" executed="True" result="Success" success="True" time="0.055" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.MetaValue" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="MultiLineTextAttributeFixture" executed="True" result="Success" success="True" time="0.018" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>