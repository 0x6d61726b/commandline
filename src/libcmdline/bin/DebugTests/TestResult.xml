<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="/home/giacomo/Projects/CommandLine/src/libcmdline/bin/DebugTests/CommandLine.dll" total="110" failures="0" not-run="0" date="2011-08-15" time="17:59:54">
  <environment nunit-version="2.4.7.0" clr-version="2.0.50727.1433" os-version="Unix 2.6.38.10" platform="Unix" cwd="/home/giacomo" machine-name="linuxlap" user="giacomo" user-domain="linuxlap" />
  <culture-info current-culture="it-IT" current-uiculture="it-IT" />
  <test-suite name="/home/giacomo/Projects/CommandLine/src/libcmdline/bin/DebugTests/CommandLine.dll" success="True" time="0.752" asserts="0">
    <results>
      <test-suite name="CommandLine" success="True" time="0.744" asserts="0">
        <results>
          <test-suite name="Tests" success="True" time="0.590" asserts="0">
            <results>
              <test-suite name="ArgumentParserFixture" success="True" time="0.014" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues" executed="True" success="True" time="0.010" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="AttributesFixture" success="True" time="0.019" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="CommandLineParserFixture" success="True" time="0.171" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue" executed="True" success="True" time="0.026" asserts="5" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions" executed="True" success="True" time="0.014" asserts="3" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseOptionList" executed="True" success="True" time="0.003" asserts="5" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions" executed="True" success="True" time="0.013" asserts="5" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions" executed="True" success="True" time="0.007" asserts="4" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParseStringOption" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="CommandLineParserSettingsFixture" success="True" time="0.011" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument" executed="True" success="True" time="0.003" asserts="2" />
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="EnumeratorsFixture" success="True" time="0.005" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.EnumeratorsFixture.CharIteration" executed="True" success="True" time="0.001" asserts="14" />
                  <test-case name="CommandLine.Tests.EnumeratorsFixture.StringIteration" executed="True" success="True" time="0.001" asserts="9" />
                </results>
              </test-suite>
              <test-suite name="HelpOptionAttributeFixture" success="True" time="0.022" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp" executed="True" success="True" time="0.013" asserts="2" />
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation" executed="True" success="True" time="0.000" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="MutuallyExclusiveParsingFixture" success="True" time="0.035" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails" executed="True" success="True" time="0.007" asserts="1" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds" executed="True" success="True" time="0.001" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="NullableTypesParsingFixture" success="True" time="0.023" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption" executed="True" success="True" time="0.014" asserts="4" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption" executed="True" success="True" time="0.002" asserts="4" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes" executed="True" success="True" time="0.001" asserts="7" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="OptionArrayAttributeParsingFixture" success="True" time="0.079" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne" executed="True" success="True" time="0.002" asserts="48" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo" executed="True" success="True" time="0.002" asserts="70" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName" executed="True" success="True" time="0.001" asserts="5" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList" executed="True" success="True" time="0.001" asserts="18" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName" executed="True" success="True" time="0.000" asserts="5" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter" executed="True" success="True" time="0.000" asserts="6" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore" executed="True" success="True" time="0.001" asserts="6" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter" executed="True" success="True" time="0.001" asserts="8" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="OptionMapFixture" success="True" time="0.011" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.OptionMapFixture.ManageOptions" executed="True" success="True" time="0.003" asserts="3" />
                  <test-case name="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="ReflectionUtilFixture" success="True" time="0.030" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList" executed="True" success="True" time="0.008" asserts="5" />
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute" executed="True" success="True" time="0.007" asserts="5" />
                  <test-case name="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
              <test-suite name="ValueListAttributeFixture" success="True" time="0.020" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="ValueListAttributeParsingFixture" success="True" time="0.021" asserts="0">
                <results>
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds" executed="True" success="True" time="0.002" asserts="6" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds" executed="True" success="True" time="0.001" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite name="Text" success="True" time="0.121" asserts="0">
            <results>
              <test-suite name="Tests" success="True" time="0.115" asserts="0">
                <results>
                  <test-suite name="CopyrightInfoFixture" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="HeadingInfoFixture" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HelpTextFixture" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat" executed="True" success="True" time="0.005" asserts="5" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat" executed="True" success="True" time="0.009" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor" executed="True" success="True" time="0.005" asserts="5" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces" executed="True" success="True" time="0.002" asserts="6" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn" executed="True" success="True" time="0.002" asserts="5" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>